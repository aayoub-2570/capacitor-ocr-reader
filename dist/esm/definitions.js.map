{"version":3,"file":"definitions.js","sourceRoot":"","sources":["../../src/definitions.ts"],"names":[],"mappings":"","sourcesContent":["export interface CapacitorPluginMlKitTextRecognitionPlugin {\n  /**\n   * Tries to detect text from the given image\n   * @param options Options for the text detection\n   * @returns Resolved texts\n   */\n  detectText(options: DetectImageOptions): Promise<TextDetectionResult>;\n}\n\nexport interface DetectImageOptions {\n  /**\n   * The image to detect texts from\n   */\n  base64Image: string;\n  /**\n   * The image's counter-clockwise orientation degrees. Only 0, 90, 180, 270 are supported. Default 0\n   */\n  rotation?: number;\n}\n\nexport interface TextDetectionResult {\n  /**\n   * Found text\n   */\n  text: string;\n  /**\n   * Parsed text by lines\n   */\n  blocks: Block[]\n}\n\nexport interface Block extends TextBase {\n  lines: Line[];\n}\n\nexport interface Line extends TextBase {\n  elements: Element[];\n}\n\nexport interface Element extends TextBase {}\n\nexport interface TextBase {\n  text: string;\n  boundingBox: BoundingBox;\n  recognizedLanguage: string;\n}\n\nexport interface BoundingBox {\n  left: number;\n  top: number;\n  right: number;\n  bottom: number;\n}"]}